(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}(g.unexpected||(g.unexpected={})).dom=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var arrayChanges=require("array-changes");var enumeratedAttributeValues={draggable:["true","false"]};function isBooleanAttribute(attrName,attrValue){var isSimpleBoolean=/^(?:allowfullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultchecked|defaultmuted|defaultselected|defer|disabled|enabled|formnovalidate|hidden|indeterminate|inert|ismap|itemscope|loop|multiple|muted|nohref|noresize|noshade|novalidate|nowrap|open|pauseonexit|readonly|required|reversed|scoped|seamless|selected|sortable|spellcheck|truespeed|typemustmatch|visible)$/i.test(attrName);if(isSimpleBoolean){return true}var attrValueEnumeration=enumeratedAttributeValues[attrName.toLowerCase()];if(!attrValueEnumeration){return false}else{return-1===attrValueEnumeration.indexOf(attrValue.toLowerCase())}}function getAttributes(element){var attrs=element.attributes;var result={};for(var i=0;i<attrs.length;i+=1){result[attrs[i].name]=isBooleanAttribute(attrs[i].name)?true:attrs[i].value||""}return result}function getCanonicalAttributes(element){var attrs=getAttributes(element);var result={};Object.keys(attrs).sort().forEach(function(key){result[key]=attrs[key]});return result}function isVoidElement(elementName){return/(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)/i.test(elementName)}function stringifyStartTag(element){var elementName=element.nodeName.toLowerCase();var str="<"+elementName;var attrs=getCanonicalAttributes(element);Object.keys(attrs).forEach(function(key){if(isBooleanAttribute(key)){str+=" "+key}else{str+=" "+key+'="'+attrs[key].replace(/&/g,"&amp;").replace(/"/g,"&quot;")+'"'}});str+=">";return str}function stringifyEndTag(element){var elementName=element.nodeName.toLowerCase();if(isVoidElement(elementName)&&element.childNodes.length===0){return""}else{return"</"+elementName+">"}}function diffNodeLists(actual,expected,output,diff,inspect,equal){var changes=arrayChanges(Array.prototype.slice.call(actual),Array.prototype.slice.call(expected),equal,function(a,b){return a.nodeType===1&&b.nodeType===1&&a.nodeName===b.nodeName});changes.forEach(function(diffItem,index){output.i().block(function(){var type=diffItem.type;if(type==="insert"){this.annotationBlock(function(){this.error("missing ").block(inspect(diffItem.value))})}else if(type==="remove"){this.block(inspect(diffItem.value).sp().error("// should be removed"))}else if(type==="equal"){this.block(inspect(diffItem.value))}else{var valueDiff=diff(diffItem.value,diffItem.expected);if(valueDiff&&valueDiff.inline){this.block(valueDiff.diff)}else if(valueDiff){this.block(inspect(diffItem.value).sp()).annotationBlock(function(){this.shouldEqualError(diffItem.expected,inspect).nl().append(valueDiff.diff)})}else{this.block(inspect(diffItem.value).sp()).annotationBlock(function(){this.shouldEqualError(diffItem.expected,inspect)})}}}).nl(index<changes.length-1?1:0)})}module.exports={name:"unexpected-dom",installInto:function(expect){expect.addType({name:"DOMNode",base:"object",identify:function(obj){return obj&&obj.nodeName&&[2,3,4,5,6,7,10,11,12].indexOf(obj.nodeType)>-1},equal:function(a,b){return a.nodeValue===b.nodeValue},inspect:function(element,depth,output){return output.code(element.nodeName+' "'+element.nodeValue+'"',"prism-string")}});expect.addType({name:"DOMComment",base:"DOMNode",identify:function(obj){return obj&&obj.nodeType===8},equal:function(a,b){return a.nodeValue===b.nodeValue},inspect:function(element,depth,output){return output.code("<!--"+element.nodeValue+"-->","html")},diff:function(actual,expected,output,diff,inspect,equal){var d=diff("<!--"+actual.nodeValue+"-->","<!--"+expected.nodeValue+"-->");d.inline=true;return d}});expect.addType({name:"DOMTextNode",base:"DOMNode",identify:function(obj){return obj&&obj.nodeType===3},equal:function(a,b){return a.nodeValue.trim()===b.nodeValue.trim()},inspect:function(element,depth,output){return output.code(element.nodeValue.trim().replace(/</g,"&lt;"),"html")},diff:function(actual,expected,output,diff,inspect,equal){var d=diff(actual.nodeValue,expected.nodeValue);d.inline=true;return d}});expect.addType({name:"DOMNodeList",base:"array-like",prefix:function(output){return output.text("NodeList[")},suffix:function(output){return output.text("]")},delimiter:function(output){return output.text("delimiter")},identify:function(obj){return obj&&typeof obj.length==="number"&&typeof obj.toString==="function"&&typeof obj.item==="function"&&obj.toString().indexOf("NodeList")!==-1}});expect.addType({name:"HTMLDocType",base:"DOMNode",identify:function(obj){return obj&&obj.nodeType===10&&"publicId"in obj},inspect:function(doctype,depth,output,inspect){output.code("<!DOCTYPE "+doctype.name+">","html")},equal:function(a,b){return a.toString()===b.toString()},diff:function(actual,expected,output,diff){var d=diff("<!DOCTYPE "+actual.name+">","<!DOCTYPE "+expected.name+">");d.inline=true;return d}});expect.addType({name:"HTMLDocument",base:"DOMNode",identify:function(obj){return obj&&obj.nodeType===9&&obj.documentElement&&obj.implementation},inspect:function(document,depth,output,inspect){for(var i=0;i<document.childNodes.length;i+=1){output.append(inspect(document.childNodes[i]))}},diff:function(actual,expected,output,diff,inspect,equal){var result={inline:true,diff:output};diffNodeLists(actual.childNodes,expected.childNodes,output,diff,inspect,equal);return result}});expect.addType({name:"HTMLElement",base:"DOMNode",identify:function(obj){return obj&&obj.nodeType===1&&obj.nodeName&&obj.attributes&&obj.outerHTML},equal:function(a,b,equal){return a.nodeName.toLowerCase()===b.nodeName.toLowerCase()&&equal(getAttributes(a),getAttributes(b))&&equal(a.childNodes,b.childNodes)},inspect:function(element,depth,output,inspect){var elementName=element.nodeName.toLowerCase();var startTag=stringifyStartTag(element);var inspectedChildren=[];if(elementName==="script"){var type=element.getAttribute("type");if(!type||/javascript/.test(type)){type="javascript"}inspectedChildren.push(output.clone().code(element.textContent,type))}else if(elementName==="style"){inspectedChildren.push(output.clone().code(element.textContent,element.getAttribute("type")||"text/css"))}else{for(var i=0;i<element.childNodes.length;i+=1){inspectedChildren.push(inspect(element.childNodes[i]))}}var width=0;var multipleLines=inspectedChildren.some(function(o){var size=o.size();width+=size.width;return width>50||o.height>1});output.code(startTag,"html");if(element.childNodes.length>0){if(multipleLines){output.nl().indentLines();inspectedChildren.forEach(function(inspectedChild,index){output.i().block(inspectedChild).nl()});output.outdentLines()}else{inspectedChildren.forEach(function(inspectedChild,index){output.append(inspectedChild)})}}output.code(stringifyEndTag(element),"html");return output},diffLimit:512,diff:function(actual,expected,output,diff,inspect,equal){var result={diff:output,inline:true};if(Math.max(actual.length,expected.length)>this.diffLimit){result.diff.jsComment("Diff suppressed due to size > "+this.diffLimit);return result}var emptyElements=actual.childNodes.length===0&&expected.childNodes.length===0;var conflictingElement=actual.nodeName.toLowerCase()!==expected.nodeName.toLowerCase()||!equal(getAttributes(actual),getAttributes(expected));if(!conflictingElement){output.code(stringifyStartTag(actual),"html")}else if(!emptyElements){output.append(diff(stringifyStartTag(actual),stringifyStartTag(expected)).diff)}if(!emptyElements){output.nl().indentLines();diffNodeLists(actual.childNodes,expected.childNodes,output,diff,inspect,equal);output.nl().outdentLines()}if(emptyElements&&conflictingElement){output.append(diff(stringifyStartTag(actual)+stringifyEndTag(actual),stringifyStartTag(expected)+stringifyEndTag(expected)).diff)}else{if(actual.nodeName.toLowerCase()===expected.nodeName.toLowerCase()){output.code(stringifyEndTag(actual),"html")}else{output.append(diff(stringifyEndTag(actual),stringifyEndTag(expected)).diff)}}return result}});expect.addAssertion("HTMLElement","to [only] have (attribute|attributes)",function(expect,subject,cmp){var attrs=getAttributes(subject);if(typeof cmp==="string"){expect(attrs,"to [only] have keys",Array.prototype.slice.call(arguments,2))}else if(Array.isArray(cmp)){expect(attrs,"to [only] have keys",cmp)}else{this.flags.exhaustively=this.flags.only;expect(attrs,"to [exhaustively] satisfy",cmp)}});expect.addAssertion("HTMLElement","to have [no] (child|children)",function(expect,subject,query,cmp){if(this.flags.no){this.errorMode="nested";return expect(Array.prototype.slice.call(subject.childNodes),"to be an empty array")}else{var children=Array.prototype.slice.call(subject.querySelectorAll(query));throw children}});expect.addAssertion(["HTMLDocument","HTMLElement"],"queried for [first]",function(expect,subject,value){var queryResult;if(this.flags.first){queryResult=subject.querySelector(value);if(!queryResult){this.errorMode="nested";expect.fail(function(output){output.error("The selector").sp().jsString(value).sp().error("yielded no results")})}}else{queryResult=subject.querySelectorAll(value);if(queryResult.length===0){this.errorMode="nested";expect.fail(function(output){output.error("The selector").sp().jsString(value).sp().error("yielded no results")})}}this.shift(expect,queryResult,1)})}}},{"array-changes":2}],2:[function(require,module,exports){var arrayDiff=require("arraydiff");function extend(target){for(var i=1;i<arguments.length;i+=1){var source=arguments[i];Object.keys(source).forEach(function(key){target[key]=source[key]})}return target}module.exports=function arrayChanges(actual,expected,equal,similar){var mutatedArray=new Array(actual.length);for(var k=0;k<actual.length;k+=1){mutatedArray[k]={type:"similar",value:actual[k]}}if(mutatedArray.length>0){mutatedArray[mutatedArray.length-1].last=true}similar=similar||function(a,b){return false};var itemsDiff=arrayDiff(actual,expected,function(a,b){return equal(a,b)||similar(a,b)});var removeTable=[];function offsetIndex(index){return index+(removeTable[index-1]||0)}var removes=itemsDiff.filter(function(diffItem){return diffItem.type==="remove"});var removesByIndex={};var removedItems=0;removes.forEach(function(diffItem){var removeIndex=removedItems+diffItem.index;mutatedArray.slice(removeIndex,diffItem.howMany+removeIndex).forEach(function(v){v.type="remove"});removedItems+=diffItem.howMany;removesByIndex[diffItem.index]=removedItems});function updateRemoveTable(){removedItems=0;actual.forEach(function(_,index){removedItems+=removesByIndex[index]||0;removeTable[index]=removedItems})}updateRemoveTable();var moves=itemsDiff.filter(function(diffItem){return diffItem.type==="move"});var movedItems=0;moves.forEach(function(diffItem){var moveFromIndex=offsetIndex(diffItem.from);var removed=mutatedArray.slice(moveFromIndex,diffItem.howMany+moveFromIndex);var added=removed.map(function(v){return extend({},v,{last:false,type:"insert"})});removed.forEach(function(v){v.type="remove"});Array.prototype.splice.apply(mutatedArray,[offsetIndex(diffItem.to),0].concat(added));movedItems+=diffItem.howMany;removesByIndex[diffItem.from]=movedItems;updateRemoveTable()});var inserts=itemsDiff.filter(function(diffItem){return diffItem.type==="insert"});inserts.forEach(function(diffItem){var added=new Array(diffItem.values.length);for(var i=0;i<diffItem.values.length;i+=1){added[i]={type:"insert",value:diffItem.values[i]}}Array.prototype.splice.apply(mutatedArray,[offsetIndex(diffItem.index),0].concat(added))});var offset=0;mutatedArray.forEach(function(diffItem,index){var type=diffItem.type;if(type==="remove"){offset-=1}else if(type==="similar"){diffItem.expected=expected[offset+index]}});var conflicts=mutatedArray.reduce(function(conflicts,item){return item.type==="similar"?conflicts:conflicts+1},0);for(var i=0,c=0;i<Math.max(actual.length,expected.length)&&c<=conflicts;i+=1){var expectedType=typeof expected[i];var actualType=typeof actual[i];if(actualType!==expectedType||(actualType==="object"||actualType==="string")&&!similar(actual[i],expected[i])||actualType!=="object"&&actualType!=="string"&&!equal(actual[i],expected[i])){c+=1}}if(c<=conflicts){mutatedArray=[];var j;for(j=0;j<Math.min(actual.length,expected.length);j+=1){mutatedArray.push({type:"similar",value:actual[j],expected:expected[j]})}if(actual.length<expected.length){for(;j<Math.max(actual.length,expected.length);j+=1){mutatedArray.push({type:"insert",value:expected[j]})}}else{for(;j<Math.max(actual.length,expected.length);j+=1){mutatedArray.push({type:"remove",value:actual[j]})}}if(mutatedArray.length>0){mutatedArray[mutatedArray.length-1].last=true}}mutatedArray.forEach(function(diffItem){if(diffItem.type==="similar"&&equal(diffItem.value,diffItem.expected)){diffItem.type="equal"}});return mutatedArray}},{arraydiff:3}],3:[function(require,module,exports){module.exports=arrayDiff;arrayDiff.InsertDiff=InsertDiff;arrayDiff.RemoveDiff=RemoveDiff;arrayDiff.MoveDiff=MoveDiff;function InsertDiff(index,values){this.index=index;this.values=values}InsertDiff.prototype.type="insert";InsertDiff.prototype.toJSON=function(){return{type:this.type,index:this.index,values:this.values}};function RemoveDiff(index,howMany){this.index=index;this.howMany=howMany}RemoveDiff.prototype.type="remove";RemoveDiff.prototype.toJSON=function(){return{type:this.type,index:this.index,howMany:this.howMany}};function MoveDiff(from,to,howMany){this.from=from;this.to=to;this.howMany=howMany}MoveDiff.prototype.type="move";MoveDiff.prototype.toJSON=function(){return{type:this.type,from:this.from,to:this.to,howMany:this.howMany}};function strictEqual(a,b){return a===b}function arrayDiff(before,after,equalFn){if(!equalFn)equalFn=strictEqual;var beforeLength=before.length;var afterLength=after.length;var moves=[];var beforeMarked={};var afterMarked={};for(var beforeIndex=0;beforeIndex<beforeLength;beforeIndex++){var beforeItem=before[beforeIndex];for(var afterIndex=0;afterIndex<afterLength;afterIndex++){if(afterMarked[afterIndex])continue;if(!equalFn(beforeItem,after[afterIndex]))continue;var from=beforeIndex;var to=afterIndex;var howMany=0;do{beforeMarked[beforeIndex++]=afterMarked[afterIndex++]=true;howMany++}while(beforeIndex<beforeLength&&afterIndex<afterLength&&equalFn(before[beforeIndex],after[afterIndex])&&!afterMarked[afterIndex]);moves.push(new MoveDiff(from,to,howMany));beforeIndex--;break}}var removes=[];for(beforeIndex=0;beforeIndex<beforeLength;){if(beforeMarked[beforeIndex]){beforeIndex++;continue}var index=beforeIndex;var howMany=0;while(beforeIndex<beforeLength&&!beforeMarked[beforeIndex++]){howMany++}removes.push(new RemoveDiff(index,howMany))}var inserts=[];for(afterIndex=0;afterIndex<afterLength;){if(afterMarked[afterIndex]){afterIndex++;continue}var index=afterIndex;var howMany=0;while(afterIndex<afterLength&&!afterMarked[afterIndex++]){howMany++}var values=after.slice(index,index+howMany);inserts.push(new InsertDiff(index,values))}var insertsLength=inserts.length;var removesLength=removes.length;var movesLength=moves.length;var i,j;var count=0;for(i=0;i<removesLength;i++){var remove=removes[i];remove.index-=count;count+=remove.howMany;for(j=0;j<movesLength;j++){var move=moves[j];if(move.from>=remove.index)move.from-=remove.howMany}}for(i=insertsLength;i--;){var insert=inserts[i];var howMany=insert.values.length;for(j=movesLength;j--;){var move=moves[j];if(move.to>=insert.index)move.to-=howMany}}for(i=movesLength;i-->1;){var move=moves[i];if(move.to===move.from)continue;for(j=i;j--;){var earlier=moves[j];if(earlier.to>=move.to)earlier.to-=move.howMany;if(earlier.to>=move.from)earlier.to+=move.howMany}}var outputMoves=[];for(i=0;i<movesLength;i++){var move=moves[i];if(move.to===move.from)continue;outputMoves.push(move);for(j=i+1;j<movesLength;j++){var later=moves[j];if(later.from>=move.from)later.from-=move.howMany;if(later.from>=move.to)later.from+=move.howMany}}return removes.concat(outputMoves,inserts)}},{}]},{},[1])(1)});